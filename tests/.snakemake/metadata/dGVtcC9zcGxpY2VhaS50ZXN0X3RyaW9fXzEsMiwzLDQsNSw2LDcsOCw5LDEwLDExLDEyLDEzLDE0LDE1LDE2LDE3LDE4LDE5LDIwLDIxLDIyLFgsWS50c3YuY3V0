{"version": null, "code": "gAMoQxJ0AGQBfA18EGQCjQMBAGQAUwBxAChYBQAAAGlucHV0cQFYBgAAAG91dHB1dHECWAYAAABwYXJhbXNxA1gJAAAAd2lsZGNhcmRzcQRYBwAAAHRocmVhZHNxBVgJAAAAcmVzb3VyY2VzcQZYAwAAAGxvZ3EHWAcAAAB2ZXJzaW9ucQhYBAAAAHJ1bGVxCVgJAAAAY29uZGFfZW52cQpYDwAAAHNpbmd1bGFyaXR5X2ltZ3ELWBAAAABzaW5ndWxhcml0eV9hcmdzcQxYDwAAAHVzZV9zaW5ndWxhcml0eXENWAwAAABiZW5jaF9yZWNvcmRxDlgFAAAAam9iaWRxD1gIAAAAaXNfc2hlbGxxEFgPAAAAYmVuY2hfaXRlcmF0aW9ucRFYCgAAAHNoYWRvd19kaXJxEnRxE11xFChOWBoEAAAKCSAJbW9kdWxlIGxvYWQge2NvbmZpZ1tzYW10b29sc192ZXJzaW9uXX0KCQltb2R1bGUgbG9hZCB7Y29uZmlnW1ZDRi1raXRfdmVyc2lvbl19CgkJdmsgdmNmMnRzdiB3aWRlIC0tcHJpbnQtaGVhZGVyIHtpbnB1dH0gPiB7b3V0cHV0LnRzdn0KCQljdXQgLWYgMS01LCQoaGVhZCAtMSB7b3V0cHV0LnRzdn0gfCBzZWQgInMvXHQvXG4vZyIgfCBncmVwIC1uICJTcGxpY2VBSSIgfCBjdXQgLWYgMSAtZDopIHtvdXRwdXQudHN2fSAJCXwgYXdrIC1GIgkiICdCRUdJTnt7T0ZTPSIJIn19ICEvLC8ge3tzcGxpdCgkNiwgc3BsaWNlcywgInwiKTsgbWF4ID0gc3BsaWNlc1szXTsgZm9yKG0gPSAzOyBtIDw9NjsgbSsrKSB7e2lmKG1heDxzcGxpY2VzW21dKSBtYXggPSBzcGxpY2VzW21dfX0gcHJpbnQgJDAsbWF4fX0gLywvIHt7biA9IHNwbGl0KCQ2LGFubm90YXRpb24sIiwiKTsgbWF4ID0gMDsgZm9yIChpID0gMTsgaSA8PW47IGkrKykge3tzcGxpdChhbm5vdGF0aW9uW2ldLHNwbGljZXMsInwiKTsgZm9yKG0gPSAzOyBtIDw9NjsgbSsrKSB7e2lmKG1heDxzcGxpY2VzW21dKSBtYXggPSBzcGxpY2VzW21dfX07IH19OyBwcmludCAkMCxtYXggfX0nIC0gCQl8IGF3ayAtRiIJIiAnQkVHSU57e09GUz0iCSJ9fSBOUj09MSB7eyQ3PSJzcGxpY2VhaV9tYXhzY29yZSI7IHByaW50ICQwfX0gTlI+MSB7e2lmICgkNj09Ii4iKSB7eyQ3PSIuIjsgcHJpbnQgJDB9fSBlbHNlIHt7cHJpbnQgJDB9fSB9fScgLSAJCXwgYXdrIC1GIgkiICdCRUdJTnt7T0ZTPSIJIn19IE5SPT0xIHt7JDg9InNwbGljZWFpX3JhbmsiOyBwcmludCAkNiwgJDcsICQ4fX0gTlI+MSB7eyBpZiAoJDc9PSIuIikge3skOCA9IDB9fSBlbHNlIHt7IGlmICgkNyA+PSAwLjgpIHt7JDggPSA4fX0gZWxzZSB7e2lmICgkNyA+PSAwLjUpIHt7JDggPSA2fX0gZWxzZSB7e2lmICgkNyA+PSAwLjIpIHt7JDggPSAzfX0gZWxzZSB7e2lmICgkNyA+PSAwLjE1KSB7eyQ4ID0gMX19IGVsc2Uge3skOCA9IDB9fX19fX0gfX19fTsgcHJpbnQgJDYsICQ3LCAkOH19JyAtICA+IHtvdXRwdXQudHN2X2N1dH0KCQlxFWgOaBGGcRZlWAUAAABzaGVsbHEXhXEYdHEZLg==", "rule": "spliceai_edit", "input": ["temp/spliceai.test_trio__1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,X,Y.vcf.gz"], "log": [], "params": [], "shellcmd": "\n\t \tmodule load samtools/1.9\n\t\tmodule load VCF-kit/0.1.6\n\t\tvk vcf2tsv wide --print-header temp/spliceai.test_trio__1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,X,Y.vcf.gz > temp/spliceai.test_trio__1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,X,Y.tsv\n\t\tcut -f 1-5,$(head -1 temp/spliceai.test_trio__1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,X,Y.tsv | sed \"s/\\t/\\n/g\" | grep -n \"SpliceAI\" | cut -f 1 -d:) temp/spliceai.test_trio__1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,X,Y.tsv \t\t| awk -F\"\t\" 'BEGIN{OFS=\"\t\"} !/,/ {split($6, splices, \"|\"); max = splices[3]; for(m = 3; m <=6; m++) {if(max<splices[m]) max = splices[m]} print $0,max} /,/ {n = split($6,annotation,\",\"); max = 0; for (i = 1; i <=n; i++) {split(annotation[i],splices,\"|\"); for(m = 3; m <=6; m++) {if(max<splices[m]) max = splices[m]}; }; print $0,max }' - \t\t| awk -F\"\t\" 'BEGIN{OFS=\"\t\"} NR==1 {$7=\"spliceai_maxscore\"; print $0} NR>1 {if ($6==\".\") {$7=\".\"; print $0} else {print $0} }' - \t\t| awk -F\"\t\" 'BEGIN{OFS=\"\t\"} NR==1 {$8=\"spliceai_rank\"; print $6, $7, $8} NR>1 { if ($7==\".\") {$8 = 0} else { if ($7 >= 0.8) {$8 = 8} else {if ($7 >= 0.5) {$8 = 6} else {if ($7 >= 0.2) {$8 = 3} else {if ($7 >= 0.15) {$8 = 1} else {$8 = 0}}} }}; print $6, $7, $8}' -  > temp/spliceai.test_trio__1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,X,Y.tsv.cut\n\t\t", "incomplete": false, "starttime": 1562264474.208859, "endtime": 1562264498.58682, "job_hash": -5227702679314632044, "conda_env": null, "singularity_img_url": null}